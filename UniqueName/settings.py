"""
Django settings for UniqueName project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
import sys
from pathlib import Path

# Add the project root directory to the Python path
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

import importlib

# Import the app name from app_config.py
try:
    from app_config import APP_NAME
except ImportError:
    # If app_config.py doesn't exist, default to UniqueName
    APP_NAME = "UniqueName"

# Dynamically import the config module based on APP_NAME
try:
    config_module = importlib.import_module(f'{APP_NAME}.config')
    Config = config_module.Config
except ImportError as e:
    print(f"Error importing config module: {e}")
    # Fallback to direct import
    from UniqueName.config import Config

from version import VERSION

conf = Config()

# Build paths inside the project like this: BASE_DIR / 'subdir',
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# Main app settings. Can be overridden in the local config file
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = conf.get_config('main', 'debug', True)

# Switch so the app knows what environment to run
DEPLOYMENT_TYPE = conf.get_config('main', 'deployment_type', 'dev')

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = conf.get_config('main', 'secret_key', 'insecure-local-key')

# Override APP_NAME from config if specified, otherwise use the one from app_config.py
APP_NAME = conf.get_config('main', 'app_name', APP_NAME)

# Pulled from the version.py file.
PORTAL_VERSION = f"{VERSION[0]}.{VERSION[1]}.{VERSION[2]}"

# Change this to whatever address the server is hosting at
BASE_URL = conf.get_config('onea', 'base_url', 'http://127.0.0.1:5000/')

# Name of the machine to show in the footer in the base page.
ENV_NAME = conf.get_config('onea', 'env_name', 'local')
# End main app settings

ALLOWED_HOSTS = []
APPLICATION_NAME = "SEEK"

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    APP_NAME,
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = f'{APP_NAME}.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, APP_NAME, 'templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = f'{APP_NAME}.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases
ENGINE = os.environ.get('ENGINE') or conf.get_config('db_config', 'db_to_use', 'pysqlite')
if ENGINE == 'pysqlite':
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': conf.get_config('db_config', 'database_engine', 'django.db.backends.mysql'),
            'NAME': conf.get_config('db_config', 'database_name', APP_NAME),
            'USER': conf.get_config('db_config', 'database_user', 'django'),
            'PASSWORD': conf.get_config('db_config', 'database_pass', 'password'),
            'HOST': conf.get_config('db_config', 'database_host', '127.0.0.1'),
            'PORT': conf.get_config('db_config', 'database_port', '3306'),
            'TEST': {
                'CHARSET': 'utf8',
                'COLLATION': 'utf8_unicode_ci',
                'DEPENDENCIES': []
            }
        }
    }

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/
LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/
STATIC_URL = 'static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, APP_NAME, 'static'),
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
